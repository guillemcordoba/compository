{"version":3,"file":"compo-discover-entry.js","sourceRoot":"","sources":["../../src/elements/compo-discover-entry.ts"],"names":[],"mappings":";;AACA,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAkB,MAAM,aAAa,CAAC;AACzE,OAAO,EACL,wBAAwB,EACxB,oBAAoB,GACrB,MAAM,uBAAuB,CAAC;AAE/B,OAAO,EAAE,oBAAoB,EAAE,MAAM,4DAA4D,CAAC;AAElG,MAAM,OAAgB,kBAAmB,SAAS,mBAAmB,CACnE,UAAU,CACH;IAFT;;QAiBE,kCAA4C;IAqC9C,CAAC;IAnDC,MAAM,KAAK,cAAc;QACvB,OAAO;YACL,uBAAuB,EAAE,oBAAoB;SAC9C,CAAC;IACJ,CAAC;IAYD,KAAK,CAAC,YAAY;QAChB,MAAM,EACJ,OAAO,EACP,SAAS,EACT,aAAa,EACb,SAAS,GACV,GAAG,MAAM,oBAAoB,CAC5B,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,aAAa,EAClB,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,QAAQ,CACd,CAAC;QAEF,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,wBAAwB,CACpD,IAAI,CAAC,aAAa,EAClB,IAAI,CAAC,iBAAiB,EACtB,OAAO,EACP,SAAS,CACV,CAAC;QAEF,KAAK,MAAM,SAAS,IAAI,MAAM,CAAC,UAAU,EAAE;YACzC,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC;SAC9D;QAED,MAAM,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QAEjD,uBAAA,IAAI,mBAAmB,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,EAAC;IAC7E,CAAC;IAED,MAAM;QACJ,IAAI,8CAAqB;YACvB,OAAO,IAAI,CAAA,iDAAiD,CAAC;QAE/D,qDAA4B;IAC9B,CAAC;CACF;;AA5CC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;oDACT;AAElB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;6DACC","sourcesContent":["import { AdminWebsocket, AppWebsocket, CellId } from '@holochain/conductor-api';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { html, LitElement, property, TemplateResult } from 'lit-element';\nimport {\n  discoverComponentsBundle,\n  discoverEntryDetails,\n} from '../processes/discover';\nimport { ComponentsBundle } from '../types/components-bundle';\nimport { CircularProgressBase } from '@material/mwc-circular-progress/mwc-circular-progress-base';\n\nexport abstract class CompoDiscoverEntry extends (ScopedElementsMixin(\n  LitElement\n) as any) {\n  static get scopedElements() {\n    return {\n      'mwc-circular-progress': CircularProgressBase,\n    };\n  }\n\n  @property({ type: String })\n  entryUri!: string;\n  @property({ type: Array })\n  compositoryCellId!: CellId;\n\n  abstract _appWebsocket: AppWebsocket;\n  abstract _adminWebsocket: AdminWebsocket;\n\n  #renderTemplate: TemplateResult | undefined;\n\n  async firstUpdated() {\n    const {\n      dnaHash,\n      zomeIndex,\n      entryDefIndex,\n      entryHash,\n    } = await discoverEntryDetails(\n      this._adminWebsocket,\n      this._appWebsocket,\n      this.compositoryCellId,\n      this.entryUri\n    );\n\n    const { bundle, def } = await discoverComponentsBundle(\n      this._appWebsocket,\n      this.compositoryCellId,\n      dnaHash,\n      zomeIndex\n    );\n\n    for (const component of bundle.components) {\n      this.defineScopedElement(component.tag, component.component);\n    }\n\n    const entryIdStr = def.entry_defs[entryDefIndex];\n\n    this.#renderTemplate = bundle.entryRenderers[entryIdStr].render(entryHash);\n  }\n\n  render() {\n    if (!this.#renderTemplate)\n      return html`<mwc-circular-progress></mwc-circular-progress>`;\n\n    return this.#renderTemplate;\n  }\n}\n"]}