{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;GAYG;AAEH;;;;;;;;;;GAUG;AAEH,cAAc,iCAAiC,CAAC;AAChD,cAAc,gCAAgC,CAAC;AAC/C,cAAc,2BAA2B,CAAC;AAC1C,cAAc,cAAc,CAAC","sourcesContent":["/**\n * Receive DNA_HASH://ENTRY_HASH\n *\n * 1. Instantiate discover element\n * 2. Element checks if we have the cell-id installed with AdminWebsocket\n *  2.1. If we don't, go to the compository DNA and fetch the new dna\n *  2.2. Install the dna using the AdminWebsocket\n * 3. Fetch the entry with details\n * 4. Figure out which zome and entry def index is the entry\n * 5. Go fetch the js module for the zome if we don't have it in cache\n * 6. Declare the elements in the discover element ScopedCustomElementsRegistry\n * 7. Instantiate the element with the entry_id\n */\n\n/**\n * Blocky:\n *\n * 0. List all installed apps with the AdminWebsocket\n * 1. Given an app id and an appwebsocket\n * 2. Get all the elements for all dnas->zomes from the compository\n *  2.1 Fetch the js modules from cache\n * 3. Declare them in the block-board ScopedCustomElementsRegistry\n * 4. If we have a layout already saved, load it\n * 5. If layout is edited, save layout\n */\n\nexport * from './elements/compo-discover-entry';\nexport * from './services/compository-service';\nexport * from './types/components-bundle';\nexport * from './types/dnas';\n"]}