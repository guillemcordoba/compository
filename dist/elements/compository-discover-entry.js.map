{"version":3,"file":"compository-discover-entry.js","sourceRoot":"","sources":["../../src/elements/compository-discover-entry.ts"],"names":[],"mappings":";AACA,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAkB,MAAM,aAAa,CAAC;AAChF,OAAO,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,MAAM,uBAAuB,CAAC;AAKhF,MAAM,OAAgB,wBAAyB,SAAQ,UAAU;IAAjE;;QAQE,aAAQ,GAAG,IAAI,CAAC;IAuClB,CAAC;IAlCC,KAAK,CAAC,YAAY;QAChB,MAAM,EACJ,MAAM,EACN,SAAS,EACT,aAAa,EACb,SAAS,GACV,GAAG,MAAM,oBAAoB,CAC5B,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,mBAAmB,EACxB,IAAI,CAAC,QAAQ,CACd,CAAC;QAEF,MAAM,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,MAAM,iBAAiB,CAChD,IAAI,CAAC,mBAAmB,EACxB,MAAM,EACN,SAAS,CACV,CAAC;QAEF,MAAM,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QACjD,SAAS,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,MAAM,CACzC,CAAE,IAAI,CAAC,MAAM,CAAC,UAAkB,CAAC,cAAc,CAAQ,EACvD,IAAI,CAAC,MAAM,CAAC,UAAwB,EACpC,SAAS,CACV,CAAC;QAEF,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA,GAAG,IAAI,CAAC,QAAQ;YACvB,CAAC,CAAC,IAAI,CAAA,iDAAiD;YACvD,CAAC,CAAC,IAAI,CAAA,EAAE;2DAC2C,CAAC;IAC1D,CAAC;CACF;AA7CC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;0DACT;AAMlB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;0DACZ;AAGhB;IADC,KAAK,CAAC,QAAQ,CAAC;wDACU","sourcesContent":["import { AdminWebsocket, AppWebsocket, CellId } from '@holochain/conductor-api';\nimport { html, LitElement, property, query, TemplateResult } from 'lit-element';\nimport { discoverRenderers, discoverEntryDetails } from '../processes/discover';\nimport { deserializeHash } from '@holochain-open-dev/common';\nimport { CompositoryScope } from './compository-scope';\nimport { CompositoryService } from '../services/compository-service';\n\nexport abstract class CompositoryDiscoverEntry extends LitElement {\n  @property({ type: String })\n  entryUri!: string;\n\n  abstract _compositoryService: CompositoryService;\n  abstract _adminWebsocket: AdminWebsocket;\n\n  @property({ type: Boolean })\n  _loading = true;\n\n  @query('#scope')\n  _scope!: CompositoryScope;\n\n  async firstUpdated() {\n    const {\n      cellId,\n      zomeIndex,\n      entryDefIndex,\n      entryHash,\n    } = await discoverEntryDetails(\n      this._adminWebsocket,\n      this._compositoryService,\n      this.entryUri\n    );\n\n    const { renderers, def } = await discoverRenderers(\n      this._compositoryService,\n      cellId,\n      zomeIndex\n    );\n\n    const entryIdStr = def.entry_defs[entryDefIndex];\n    renderers.entryRenderers[entryIdStr].render(\n      ((this._scope.shadowRoot as any).customElements) as any,\n      this._scope.shadowRoot as ShadowRoot,\n      entryHash\n    );\n\n    this._loading = false;\n  }\n\n  render() {\n    return html`${this._loading\n        ? html`<mwc-circular-progress></mwc-circular-progress>`\n        : html``}\n      <compository-scope id=\"scope\"> </compository-scope> `;\n  }\n}\n"]}