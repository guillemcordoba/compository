{"version":3,"file":"compository-install-dna-dialog.js","sourceRoot":"","sources":["../../src/elements/compository-install-dna-dialog.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AAChE,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AACzC,OAAO,EAAE,MAAM,EAAE,MAAM,4CAA4C,CAAC;AACpE,OAAO,EAAE,MAAM,EAAE,MAAM,4CAA4C,CAAC;AACpE,OAAO,EAAE,SAAS,EAAE,MAAM,+CAA+C,CAAC;AAC1E,OAAO,EAAE,eAAe,EAAE,MAAM,4BAA4B,CAAC;AAG7D,MAAM,OAAO,2BAA4B,SAAQ,eAAe,CAC9D,MAAM,CAAC,UAAU,CAAC,CACnB;IAOC,MAAM,KAAK,cAAc;QACvB,OAAO;YACL,YAAY,EAAE,MAAM;YACpB,YAAY,EAAE,MAAM;YACpB,eAAe,EAAE,SAAS;SAC3B,CAAC;IACJ,CAAC;IACD,IAAI,CAAC,MAAM,GAAG,IAAI;QAChB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC;IAC7B,CAAC;IAED,KAAK,CAAC,UAAU;QACd,MAAM,OAAO,GAAG,IAAI,CAAC,cAAgC,CAAC;QACtD,MAAM,QAAQ,GAAG,MAAM,OAAO,CAAC,mBAAmB,EAAE,CAAC;QACrD,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC;YACtC,SAAS,EAAE,QAAQ;YACnB,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;YACzC,gBAAgB,EAAE,iBAAiB,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,EAAE;SACvD,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAC,eAAe,EAAE;YAC/B,MAAM,EAAE,EAAE,MAAM,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YAC1C,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;SACf,CAAC,CACH,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnB,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;;;;;;mBAMI,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;;;;;;sBAMzC,CAAC,IAAI,CAAC,QAAQ;mBACjB,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE;;;;;;;;KAQrC,CAAC;IACJ,CAAC;CACF;AA3DC;IADC,KAAK,CAAC,SAAS,CAAC;4DACA;AAGjB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;6DACT","sourcesContent":["import { html, LitElement, property, query } from 'lit-element';\nimport { Scoped } from 'scoped-elements';\nimport { Dialog } from 'scoped-material-components/dist/mwc-dialog';\nimport { Button } from 'scoped-material-components/dist/mwc-button';\nimport { TextField } from 'scoped-material-components/dist/mwc-textfield';\nimport { membraneContext } from 'holochain-membrane-context';\nimport { AdminWebsocket } from '@holochain/conductor-api';\n\nexport class CompositoryInstallDnaDialog extends membraneContext(\n  Scoped(LitElement)\n) {\n  @query('#dialog')\n  _dialog!: Dialog;\n\n  @property({ type: String })\n  _dnaPath!: string;\n\n  static get scopedElements() {\n    return {\n      'mwc-dialog': Dialog,\n      'mwc-button': Button,\n      'mwc-textfield': TextField,\n    };\n  }\n  open(opened = true) {\n    this._dialog.open = opened;\n  }\n\n  async installDna() {\n    const adminWs = this.adminWebsocket as AdminWebsocket;\n    const agentKey = await adminWs.generateAgentPubKey();\n    const result = await adminWs.installApp({\n      agent_key: agentKey,\n      dnas: [{ nick: '', path: this._dnaPath }],\n      installed_app_id: `generated-app-${Date.now() % 1000}`,\n    });\n\n    this.dispatchEvent(\n      new CustomEvent('dna-installed', {\n        detail: { cellId: result.cell_data[0][0] },\n        bubbles: true,\n        composed: true,\n      })\n    );\n    this.open(false);\n  }\n\n  render() {\n    return html`\n      <mwc-dialog id=\"dialog\" heading=\"Install new DNA\">\n        <mwc-textfield\n          id=\"dna-path\"\n          placeholder=\"Dna.gz path\"\n          required\n          @input=${(e: any) => (this._dnaPath = e.target.value)}\n        >\n        </mwc-textfield>\n\n        <mwc-button\n          slot=\"primaryAction\"\n          .disabled=${!this._dnaPath}\n          @click=${() => this.installDna()}\n        >\n          Install\n        </mwc-button>\n        <mwc-button slot=\"secondaryAction\" dialogAction=\"cancel\">\n          Cancel\n        </mwc-button>\n      </mwc-dialog>\n    `;\n  }\n}\n"]}