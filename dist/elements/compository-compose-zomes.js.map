{"version":3,"file":"compository-compose-zomes.js","sourceRoot":"","sources":["../../src/elements/compository-compose-zomes.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AAChE,OAAO,EAAE,MAAM,EAAE,MAAM,sBAAsB,CAAC;AAG9C,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAC9C,OAAO,EAAE,MAAM,EAAE,MAAM,sBAAsB,CAAC;AAC9C,OAAO,EAAE,IAAI,EAAkB,MAAM,oBAAoB,CAAC;AAC1D,OAAO,EAAE,aAAa,EAAE,MAAM,wCAAwC,CAAC;AACvE,OAAO,EAAE,gBAAgB,EAAE,MAAM,iCAAiC,CAAC;AACnE,OAAO,EAAE,SAAS,EAAE,MAAM,2BAA2B,CAAC;AACtD,OAAO,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAC;AAC1D,OAAO,EAAE,2BAA2B,EAAE,MAAM,kCAAkC,CAAC;AAG/E,MAAM,OAAgB,uBAAwB,SAAQ,MAAM,CAAC,UAAU,CAAC;IAAxE;;QAOE,qBAAgB,GAAgB,IAAI,GAAG,EAAE,CAAC;IAoF5C,CAAC;IA/EC,MAAM,KAAK,MAAM;QACf,OAAO,YAAY,CAAC;IACtB,CAAC;IAED,IAAI,cAAc;QAChB,MAAM,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC;QAChC,OAAO;YACL,UAAU,EAAE,IAAI;YAChB,qBAAqB,EAAE,aAAa;YACpC,uBAAuB,EAAE,gBAAgB;YACzC,YAAY,EAAE,MAAM;YACpB,gCAAgC,EAAE,KAAM,SAAQ,2BAA2B;gBACzE,IAAI,eAAe;oBACjB,OAAO,EAAE,CAAC;gBACZ,CAAC;aACoB;SACxB,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,YAAY;QAChB,IAAI,CAAC,QAAQ,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,cAAc,EAAE,CAAC;IAClE,CAAC;IAED,KAAK,CAAC,iBAAiB;QACrB,MAAM,QAAQ,GAA2B,KAAK,CAAC,IAAI,CACjD,IAAI,CAAC,gBAAgB,CACtB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAE7B,MAAM,iBAAiB,GAA4B,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACtE,IAAI,EAAE,GAAG,CAAC,OAAO,CAAC,IAAI;YACtB,aAAa,EAAE,GAAG,CAAC,IAAI;SACxB,CAAC,CAAC,CAAC;QACJ,MAAM,WAAW,GAAgB;YAC/B,IAAI,EAAE,KAAK;YACX,SAAS,EAAE,iBAAiB;SAC7B,CAAC;QAEF,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CACvE,WAAW,CACZ,CAAC;QAEF,MAAM,OAAO,GAAG,MAAM,SAAS,CAC7B,IAAI,CAAC,mBAAmB,EACxB,eAAe,EACf,EAAE,EACF,EAAE,CACH,CAAC;QAEF,YAAY,CAAC,OAAO,CAAC,CAAC;QAEtB,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;IAChC,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,QAAQ;YAChB,OAAO,IAAI,CAAA,iDAAiD,CAAC;QAE/D,OAAO,IAAI,CAAA;;;;;;sBAMO,CAAC,CAAc,EAAE,EAAE,CAC7B,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;;YAExC,IAAI,CAAC,QAAQ,CAAC,GAAG,CACjB,OAAO,CAAC,EAAE,CAAC,IAAI,CAAA;qCACU,OAAO,CAAC,OAAO,CAAC,IAAI;aAC5C,CACF;;;;;mBAKQ,GAAG,EAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE;;aAEpC,CAAC;IACZ,CAAC;CACF;AAzFC;IADC,QAAQ,EAAE;yDACuB;AAGlC;IADC,KAAK,CAAC,qBAAqB,CAAC;kEACmB","sourcesContent":["import { html, LitElement, property, query } from 'lit-element';\nimport { Scoped } from 'scoped-element-mixin';\nimport { CompositoryService } from '../services/compository-service';\nimport { DnaTemplate, Hashed, ZomeDef, ZomeDefReference } from '../types/dnas';\nimport { sharedStyles } from './sharedStyles';\nimport { Button } from '@material/mwc-button';\nimport { List, SelectedDetail } from '@material/mwc-list';\nimport { CheckListItem } from '@material/mwc-list/mwc-check-list-item';\nimport { CircularProgress } from '@material/mwc-circular-progress';\nimport { bundleDna } from '../processes/compress-dna';\nimport { downloadFile } from '../processes/download-file';\nimport { CompositoryInstallDnaDialog } from './compository-install-dna-dialog';\nimport { AdminWebsocket } from '@holochain/conductor-api';\n\nexport abstract class CompositoryComposeZomes extends Scoped(LitElement) {\n  @property()\n  zomeDefs!: Array<Hashed<ZomeDef>>;\n\n  @query('#install-dna-dialog')\n  _installDnaDialog!: CompositoryInstallDnaDialog;\n\n  _selectedIndexes: Set<number> = new Set();\n\n  abstract _compositoryService: CompositoryService;\n  abstract _adminWebsocket: AdminWebsocket;\n\n  static get styles() {\n    return sharedStyles;\n  }\n\n  get scopedElements() {\n    const ws = this._adminWebsocket;\n    return {\n      'mwc-list': List,\n      'mwc-check-list-item': CheckListItem,\n      'mwc-circular-progress': CircularProgress,\n      'mwc-button': Button,\n      'compository-install-dna-dialog': class extends CompositoryInstallDnaDialog {\n        get _adminWebsocket() {\n          return ws;\n        }\n      } as typeof HTMLElement,\n    };\n  }\n\n  async firstUpdated() {\n    this.zomeDefs = await this._compositoryService.getAllZomeDefs();\n  }\n\n  async createDnaTemplate() {\n    const zomeDefs: Array<Hashed<ZomeDef>> = Array.from(\n      this._selectedIndexes\n    ).map(i => this.zomeDefs[i]);\n\n    const zomeDefReferences: Array<ZomeDefReference> = zomeDefs.map(def => ({\n      name: def.content.name,\n      zome_def_hash: def.hash,\n    }));\n    const dnaTemplate: DnaTemplate = {\n      name: 'adf',\n      zome_defs: zomeDefReferences,\n    };\n\n    const dnaTemplateHash = await this._compositoryService.publishDnaTemplate(\n      dnaTemplate\n    );\n\n    const dnaFile = await bundleDna(\n      this._compositoryService,\n      dnaTemplateHash,\n      '',\n      {}\n    );\n\n    downloadFile(dnaFile);\n\n    this._installDnaDialog.open();\n  }\n\n  render() {\n    if (!this.zomeDefs)\n      return html`<mwc-circular-progress></mwc-circular-progress>`;\n\n    return html` <compository-install-dna-dialog\n        id=\"install-dna-dialog\"\n      ></compository-install-dna-dialog>\n      <div class=\"column\">\n        <mwc-list\n          multi\n          @selected=${(e: CustomEvent) =>\n            (this._selectedIndexes = e.detail.index)}\n        >\n          ${this.zomeDefs.map(\n            zomeDef => html`\n              <mwc-check-list-item>${zomeDef.content.name}</mwc-check-list-item>\n            `\n          )}\n        </mwc-list>\n\n        <mwc-button\n          label=\"CREATE DNA TEMPLATE\"\n          @click=${() => this.createDnaTemplate()}\n        ></mwc-button>\n      </div>`;\n  }\n}\n"]}