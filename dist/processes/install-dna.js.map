{"version":3,"file":"install-dna.js","sourceRoot":"","sources":["../../src/processes/install-dna.ts"],"names":[],"mappings":"AAGA,MAAM,CAAC,KAAK,UAAU,QAAQ,CAC5B,cAA8B,EAC9B,kBAAsC,EACtC,OAAe;IAEf,MAAM,QAAQ,GAAG,MAAM,kBAAkB,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;IAErE,OAAO;IACP,OAAO,CAAC,EAAE,EAAE,EAAE,CAAQ,CAAC;AACzB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,UAAU,CAC9B,cAA8B,EAC9B,kBAAsC,EACtC,OAAe;IAEf,MAAM,QAAQ,GAAG,MAAM,kBAAkB,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;IAErE,OAAO;IACP,OAAO,CAAC,EAAE,EAAE,EAAE,CAAQ,CAAC;AACzB,CAAC","sourcesContent":["import { AdminWebsocket, CellId } from '@holochain/conductor-api';\nimport { CompositoryService } from '../services/compository-service';\n\nexport async function fetchDna(\n  adminWebsocket: AdminWebsocket,\n  compositoryService: CompositoryService,\n  dnaHash: string\n): Promise<CellId> {\n  const template = await compositoryService.getTemplateForDna(dnaHash);\n\n  // TODO\n  return [[], []] as any;\n}\n\nexport async function installDna(\n  adminWebsocket: AdminWebsocket,\n  compositoryService: CompositoryService,\n  dnaHash: string\n): Promise<CellId> {\n  const template = await compositoryService.getTemplateForDna(dnaHash);\n\n  // TODO\n  return [[], []] as any;\n}\n"]}